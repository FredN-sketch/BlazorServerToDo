@page "/todo"
@using System.ComponentModel.DataAnnotations
@using BlazorServerToDo.Models
@using BlazorServerToDo.Services
@rendermode InteractiveServer
@inject IToDoService ToDoService  

<h3>ToDo</h3>
<EditForm Model="@newToDo" OnSubmit=@FormSubmitted FormName="Register">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="title" class="form-label">Title</label>
        <InputText id="title" class="form-control" @bind-Value="@newToDo.Title" />
        <ValidationMessage For="@(() => newToDo.Title)" />
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <InputTextArea id="description" class="form-control" @bind-Value="@newToDo.Description" />
        <ValidationMessage For="@(() => newToDo.Description)" />
    </div>
    <button type="submit" class="btn btn-primary">Add ToDo</button>
</EditForm>
@code {
    private ToDoItem newToDo = new ToDoItem();
   
    private void FormSubmitted(EditContext editContext)
    {
        bool formIsValidated = editContext.Validate();
        if (formIsValidated)
        {
            var validToDoItem = (ToDoItem)editContext.Model;
            ToDoItem newToDoItem = new()
            {
                Title = validToDoItem.Title,
                Description = validToDoItem.Description,
                Date = DateTime.Now
            };
            // GlobalToDoList.Products.Add(newToDoItem);
            // Products.Add(newProduct);
            StateHasChanged();
        }
    }
}
